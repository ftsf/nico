nimTitle	nico	nico.html	module nico		0
nim	getFont	nico.html#getFont	proc getFont(): FontId		143
nim	setFont	nico.html#setFont,FontId	proc setFont(fontId: FontId)		144
nim	glyph	nico.html#glyph,Rune,Pint,Pint,Pint	proc glyph(c: Rune; x, y: Pint; scale: Pint = 1): Pint		147
nim	glyph	nico.html#glyph,char,Pint,Pint,Pint	proc glyph(c: char; x, y: Pint; scale: Pint = 1): Pint		148
nim	cursor	nico.html#cursor,Pint,Pint	proc cursor(x, y: Pint)		150
nim	print	nico.html#print,string,Pint	proc print(text: string; scale: Pint = 1)		151
nim	print	nico.html#print,string,Pint,Pint,Pint	proc print(text: string; x, y: Pint; scale: Pint = 1)		152
nim	printc	nico.html#printc,string,Pint,Pint,Pint	proc printc(text: string; x, y: Pint; scale: Pint = 1)		153
nim	printr	nico.html#printr,string,Pint,Pint,Pint	proc printr(text: string; x, y: Pint; scale: Pint = 1)		154
nim	textWidth	nico.html#textWidth,string,Pint	proc textWidth(text: string; scale: Pint = 1): Pint		156
nim	glyphWidth	nico.html#glyphWidth,Rune,Pint	proc glyphWidth(c: Rune; scale: Pint = 1): Pint		157
nim	glyphWidth	nico.html#glyphWidth,char,Pint	proc glyphWidth(c: char; scale: Pint = 1): Pint		158
nim	setColor	nico.html#setColor,ColorId	proc setColor(colId: ColorId)		161
nim	getColor	nico.html#getColor	proc getColor(): ColorId		162
nim	loadPaletteFromGPL	nico.html#loadPaletteFromGPL,string	proc loadPaletteFromGPL(filename: string): Palette		163
nim	loadPaletteFromHexString	nico.html#loadPaletteFromHexString,string	proc loadPaletteFromHexString(s: string): Palette		164
nim	loadPaletteFromImage	nico.html#loadPaletteFromImage,string	proc loadPaletteFromImage(filename: string): Palette		165
nim	loadPalettePico8	nico.html#loadPalettePico8	proc loadPalettePico8(): Palette		166
nim	loadPaletteCGA	nico.html#loadPaletteCGA,range[],bool	proc loadPaletteCGA(mode: range[0 .. 2] = 0; highIntensity: bool = true): Palette		167
nim	loadPaletteGrayscale	nico.html#loadPaletteGrayscale,range[]	proc loadPaletteGrayscale(steps: range[1 .. 256] = 256): Palette		168
nim	palSize	nico.html#palSize	proc palSize(): Pint		169
nim	pal	nico.html#pal,ColorId,ColorId	proc pal(a, b: ColorId)		171
nim	pal	nico.html#pal,ColorId	proc pal(a: ColorId): ColorId		172
nim	pald	nico.html#pald,ColorId,ColorId	proc pald(a, b: ColorId)		173
nim	pald	nico.html#pald,ColorId	proc pald(a: ColorId): ColorId		174
nim	pal	nico.html#pal	proc pal()		175
nim	pald	nico.html#pald	proc pald()		176
nim	palt	nico.html#palt,ColorId,bool	proc palt(a: ColorId; trans: bool)		177
nim	palt	nico.html#palt	proc palt()		178
nim	palCol	nico.html#palCol,Pint,uint8,uint8,uint8	proc palCol(c: Pint; r, g, b: uint8)		180
nim	palCol	nico.html#palCol,ColorId	proc palCol(c: ColorId): (uint8, uint8, uint8)		184
nim	palIndex	nico.html#palIndex,uint8,uint8,uint8	proc palIndex(r, g, b: uint8): int		188
nim	clip	nico.html#clip,Pint,Pint,Pint,Pint	proc clip(x, y, w, h: Pint)		203
nim	clip	nico.html#clip	proc clip()		204
nim	getClip	nico.html#getClip	proc getClip(): (int, int, int, int)		205
nim	stencilSet	nico.html#stencilSet,Pint,Pint,Pint	proc stencilSet(x, y, v: Pint)		220
nim	stencilGet	nico.html#stencilGet,Pint,Pint	proc stencilGet(x, y: Pint): uint8		223
nim	setStencilRef	nico.html#setStencilRef,Pint	proc setStencilRef(v: Pint)		226
nim	setStencilWrite	nico.html#setStencilWrite,bool	proc setStencilWrite(on: bool)		229
nim	setStencilWriteFail	nico.html#setStencilWriteFail,bool	proc setStencilWriteFail(on: bool)		232
nim	setStencilOnly	nico.html#setStencilOnly,bool	proc setStencilOnly(on: bool)		235
nim	stencilMode	nico.html#stencilMode,StencilMode	proc stencilMode(mode: StencilMode)		238
nim	stencilClear	nico.html#stencilClear	proc stencilClear()		241
nim	stencilClear	nico.html#stencilClear,Pint	proc stencilClear(v: Pint)		245
nim	setStencilBlend	nico.html#setStencilBlend,StencilBlend	proc setStencilBlend(blend: StencilBlend = stencilReplace)		249
nim	setCamera	nico.html#setCamera,Pint,Pint	proc setCamera(x, y: Pint = 0)		277
nim	getCamera	nico.html#getCamera	proc getCamera(): (Pint, Pint)		278
nim	btn	nico.html#btn,NicoButton	proc btn(b: NicoButton): bool		281
nim	btnp	nico.html#btnp,NicoButton	proc btnp(b: NicoButton): bool		282
nim	btnup	nico.html#btnup,NicoButton	proc btnup(b: NicoButton): bool		283
nim	btnpr	nico.html#btnpr,NicoButton,int	proc btnpr(b: NicoButton; repeat = 48): bool		284
nim	jaxis	nico.html#jaxis,NicoAxis	proc jaxis(axis: NicoAxis): Pfloat		285
nim	btn	nico.html#btn,NicoButton,range[]	proc btn(b: NicoButton; player: range[0 .. maxPlayers]): bool		287
nim	btnp	nico.html#btnp,NicoButton,range[]	proc btnp(b: NicoButton; player: range[0 .. maxPlayers]): bool		288
nim	btnup	nico.html#btnup,NicoButton,range[]	proc btnup(b: NicoButton; player: range[0 .. maxPlayers]): bool		289
nim	btnpr	nico.html#btnpr,NicoButton,range[],int	proc btnpr(b: NicoButton; player: range[0 .. maxPlayers]; repeat = 48): bool		290
nim	btnRaw	nico.html#btnRaw,NicoButton,range[]	proc btnRaw(b: NicoButton; player: range[0 .. maxPlayers]): int		291
nim	jaxis	nico.html#jaxis,NicoAxis,range[]	proc jaxis(axis: NicoAxis; player: range[0 .. maxPlayers]): Pfloat		292
nim	mouse	nico.html#mouse	proc mouse(): (int, int)		295
nim	mouserel	nico.html#mouserel	proc mouserel(): (float32, float32)		296
nim	mousebtn	nico.html#mousebtn,range[]	proc mousebtn(b: range[0 .. 2]): bool		297
nim	mousebtnup	nico.html#mousebtnup,range[]	proc mousebtnup(b: range[0 .. 2]): bool		298
nim	mousebtnp	nico.html#mousebtnp,range[]	proc mousebtnp(b: range[0 .. 2]): bool		299
nim	mousebtnpr	nico.html#mousebtnpr,range[],Pint	proc mousebtnpr(b: range[0 .. 2]; r: Pint = 48): bool		300
nim	mousewheel	nico.html#mousewheel	proc mousewheel(): int		301
nim	emulateMouse	nico.html#emulateMouse,bool	proc emulateMouse(on: bool)		302
nim	getTouches	nico.html#getTouches	proc getTouches(): seq[Touch]		305
nim	getTouchCount	nico.html#getTouchCount	proc getTouchCount(): int		307
nim	pset	nico.html#pset,Pint,Pint	proc pset(x, y: Pint)		316
nim	pget	nico.html#pget,Pint,Pint	proc pget(x, y: Pint): ColorId		317
nim	pgetRGB	nico.html#pgetRGB,Pint,Pint	proc pgetRGB(x, y: Pint): (uint8, uint8, uint8)		318
nim	sset	nico.html#sset,Pint,Pint,int	proc sset(x, y: Pint; c: int = -1)		319
nim	sget	nico.html#sget,Pint,Pint	proc sget(x, y: Pint): ColorId		320
nim	rect	nico.html#rect,Pint,Pint,Pint,Pint	proc rect(x1, y1, x2, y2: Pint)		323
nim	rectfill	nico.html#rectfill,Pint,Pint,Pint,Pint	proc rectfill(x1, y1, x2, y2: Pint)		324
nim	rrect	nico.html#rrect,Pint,Pint,Pint,Pint,Pint	proc rrect(x1, y1, x2, y2: Pint; r: Pint = 1)		325
nim	rrectfill	nico.html#rrectfill,Pint,Pint,Pint,Pint,Pint	proc rrectfill(x1, y1, x2, y2: Pint; r: Pint = 1)		326
nim	rectCorner	nico.html#rectCorner,Pint,Pint,Pint,Pint	proc rectCorner(x1, y1, x2, y2: Pint)		327
nim	rrectCorner	nico.html#rrectCorner,Pint,Pint,Pint,Pint	proc rrectCorner(x1, y1, x2, y2: Pint)		328
nim	box	nico.html#box,Pint,Pint,Pint,Pint	proc box(x, y, w, h: Pint)		329
nim	boxfill	nico.html#boxfill,Pint,Pint,Pint,Pint	proc boxfill(x, y, w, h: Pint)		330
nim	line	nico.html#line,Pint,Pint,Pint,Pint	proc line(x0, y0, x1, y1: Pint)		333
nim	hline	nico.html#hline,Pint,Pint,Pint	proc hline(x0, y, x1: Pint)		334
nim	hlineFast	nico.html#hlineFast,Pint,Pint,Pint	proc hlineFast(x0, y, x1: Pint)		335
nim	vline	nico.html#vline,Pint,Pint,Pint	proc vline(x, y0, y1: Pint)		336
nim	tline	nico.html#tline,Pint,Pint,Pint,Pint,Pfloat,Pfloat,Pfloat,Pfloat	proc tline(x0, y0, x1, y1: Pint; tx, ty: Pfloat; tdx: Pfloat = 1.0'f32;\n      tdy: Pfloat = 0.0'f32)		337
nim	trifill	nico.html#trifill,Pint,Pint,Pint,Pint,Pint,Pint	proc trifill(ax, ay, bx, by, cx, cy: Pint)		340
nim	quadfill	nico.html#quadfill,Pint,Pint,Pint,Pint,Pint,Pint,Pint,Pint	proc quadfill(x1, y1, x2, y2, x3, y3, x4, y4: Pint)		341
nim	circfill	nico.html#circfill,Pint,Pint,Pint	proc circfill(cx, cy: Pint; r: Pint)		344
nim	circ	nico.html#circ,Pint,Pint,Pint	proc circ(cx, cy: Pint; r: Pint)		345
nim	ellipsefill	nico.html#ellipsefill,Pint,Pint,Pint,Pint	proc ellipsefill(cx, cy: Pint; rx, ry: Pint)		346
nim	spr	nico.html#spr,Pint,Pint,Pint,Pint,Pint,bool,bool	proc spr(spr: Pint; x, y: Pint; w, h: Pint = 1; hflip, vflip: bool = false)		349
nim	sprs	nico.html#sprs,Pint,Pint,Pint,Pint,Pint,Pint,Pint,bool,bool	proc sprs(spr: Pint; x, y: Pint; w, h: Pint = 1; dw, dh: Pint = 1;\n     hflip, vflip: bool = false)		350
nim	sspr	nico.html#sspr,Pint,Pint,Pint,Pint,Pint,Pint,Pint,Pint,bool,bool	proc sspr(sx, sy, sw, sh, dx, dy: Pint; dw, dh: Pint = -1; hflip, vflip: bool = false)		351
nim	sprshift	nico.html#sprshift,Pint,Pint,Pint,Pint,Pint,Pint,Pint,bool,bool	proc sprshift(spr: Pint; x, y: Pint; w, h: Pint = 1; ox, oy: Pint = 0;\n         hflip, vflip: bool = false)		352
nim	sprRot	nico.html#sprRot,Pint,Pint,Pint,float32,Pint,Pint	proc sprRot(spr: Pint; x, y: Pint; radians: float32; w, h: Pint = 1)		353
nim	sprRot90	nico.html#sprRot90,Pint,Pint,Pint,int,Pint,Pint	proc sprRot90(spr: Pint; x, y: Pint; rotations: int; w, h: Pint = 1)		354
nim	spr	nico.html#spr,SpriteDraw	proc spr(drawer: SpriteDraw)		355
nim	spr	nico.html#spr,SpriteDraw,Pint,Pint	proc spr(drawer: SpriteDraw; x, y: Pint)		356
nim	sprOverlap	nico.html#sprOverlap,SpriteDraw,SpriteDraw	proc sprOverlap(a, b: SpriteDraw): bool		357
nim	copy	nico.html#copy,Pint,Pint,Pint,Pint,Pint,Pint	proc copy(sx, sy, dx, dy, w, h: Pint)		360
nim	wrap	nico.html#wrap,T,T	proc wrap[T](x, m: T): T		369
nim	clamp	nico.html#clamp,T	proc clamp[T](a: T): T		371
nim	clamp01	nico.html#clamp01,T	proc clamp01[T](a: T): T		374
nim	mid	nico.html#mid,T,T,T	proc mid[T](a, b, c: T): T		377
nim	shutdown	nico.html#shutdown	proc shutdown()		385
nim	init	nico.html#init,string,string	proc init(org: string; app: string)		386
nim	mset	nico.html#mset,Pint,Pint,int	proc mset(tx, ty: Pint; t: int)		399
nim	mget	nico.html#mget,Pint,Pint	proc mget(tx, ty: Pint): int		400
nim	mapDraw	nico.html#mapDraw,Pint,Pint,Pint,Pint,Pint,Pint,Pint,Pint,bool,Pint,Pint	proc mapDraw(startTX, startTY, tw, th, dx, dy: Pint; dw, dh: Pint = -1;\n        loop: bool = false; ox, oy: Pint = 0)		401
nim	setMap	nico.html#setMap,int	proc setMap(index: int)		402
nim	loadMap	nico.html#loadMap,int,string,int	proc loadMap(index: int; filename: string; layer = 0)		403
nim	loadMapObjects	nico.html#loadMapObjects,int,string,int	proc loadMapObjects(index: int; filename: string; layer = 0): seq[\n    (float32, float32, string, string)]		404
nim	newMap	nico.html#newMap,int,Pint,Pint,Pint,Pint	proc newMap(index: int; w, h: Pint; tw, th: Pint = 8)		405
nim	pixelToMap	nico.html#pixelToMap,Pint,Pint	proc pixelToMap(px, py: Pint): (Pint, Pint)		406
nim	mapToPixel	nico.html#mapToPixel,Pint,Pint	proc mapToPixel(tx, ty: Pint): (Pint, Pint)		407
nim	saveMap	nico.html#saveMap,int,string	proc saveMap(index: int; filename: string)		408
nim	flr	nico.html#flr,Pfloat	proc flr(x: Pfloat): Pfloat		415
nim	ceil	nico.html#ceil,Pfloat	proc ceil(x: Pfloat): Pfloat		416
nim	lerp	nico.html#lerp,T,T,Pfloat	proc lerp[T](a, b: T; t: Pfloat): T		418
nim	lerpSnap	nico.html#lerpSnap,T,T,Pfloat,float32	proc lerpSnap[T](a, b: T; t: Pfloat; threshold = 0.1'f32): T		419
nim	rnd	nico.html#rnd,T	proc rnd[T: Natural](x: T): T		421
nim	rnd	nico.html#rnd,openArray[T]	proc rnd[T](a: openArray[T]): T		422
nim	rnd	nico.html#rnd,Pfloat	proc rnd(x: Pfloat): Pfloat		423
nim	rnd	nico.html#rnd,HSlice[T,T]	proc rnd[T](x: HSlice[T, T]): T		424
nim	psetRaw	nico.html#psetRaw,Pint,Pint,ColorId	proc psetRaw(x, y: Pint; c: ColorId)		428
nim	psetRaw	nico.html#psetRaw,Pint,Pint	proc psetRaw(x, y: Pint)		429
nim	fps	nico.html#fps,int	proc fps(fps: int)		431
nim	fps	nico.html#fps	proc fps(): int		436
nim	time	nico.html#time	proc time(): float		440
nim	speed	nico.html#speed,int	proc speed(speed: int)		444
nim	setPalette	nico.html#setPalette,Palette	proc setPalette(p: Palette)		517
nim	getPalette	nico.html#getPalette	proc getPalette(): Palette		521
nim	loadPalettePico8Extra	nico.html#loadPalettePico8Extra	proc loadPalettePico8Extra(): Palette		581
nim	setDitherColor	nico.html#setDitherColor,Pint	proc setDitherColor(c: Pint = -1)		655
nim	ditherPattern	nico.html#ditherPattern,uint16	proc ditherPattern(pattern: uint16 = 0b00000000000000001111111111111111)		659
nim	ditherOffset	nico.html#ditherOffset,Pint,Pint	proc ditherOffset(x, y: Pint)		668
nim	ditherPatternScanlines	nico.html#ditherPatternScanlines	proc ditherPatternScanlines()		672
nim	ditherPatternScanlines2	nico.html#ditherPatternScanlines2	proc ditherPatternScanlines2()		677
nim	ditherPatternCheckerboard	nico.html#ditherPatternCheckerboard	proc ditherPatternCheckerboard()		682
nim	ditherPatternCheckerboard2	nico.html#ditherPatternCheckerboard2	proc ditherPatternCheckerboard2()		687
nim	ditherPatternBigCheckerboard	nico.html#ditherPatternBigCheckerboard	proc ditherPatternBigCheckerboard()		692
nim	ditherPatternBigCheckerboard2	nico.html#ditherPatternBigCheckerboard2	proc ditherPatternBigCheckerboard2()		697
nim	ditherPatternBayer	nico.html#ditherPatternBayer,float32	proc ditherPatternBayer(a: float32)		712
nim	ditherNone	nico.html#ditherNone	proc ditherNone()		721
nim	ditherADitherAdd	nico.html#ditherADitherAdd,float32,int,int,int	proc ditherADitherAdd(v: float32; a = 237; b = 119; c = 255)		724
nim	ditherADitherXor	nico.html#ditherADitherXor,float32,int,int,int	proc ditherADitherXor(v: float32; a = 149; b = 1234; c = 511)		731
nim	isKeyboard	nico.html#isKeyboard,range[]	proc isKeyboard(player: range[0 .. maxPlayers]): bool		758
nim	isGamepad	nico.html#isGamepad,range[]	proc isGamepad(player: range[0 .. maxPlayers]): bool		764
nim	anybtnp	nico.html#anybtnp	proc anybtnp(): bool		828
nim	anybtnp	nico.html#anybtnp,range[]	proc anybtnp(player: range[0 .. maxPlayers]): bool		834
nim	key	nico.html#key,Keycode	proc key(k: Keycode): bool		840
nim	keyp	nico.html#keyp,Keycode	proc keyp(k: Keycode): bool		844
nim	keypr	nico.html#keypr,Keycode,int	proc keypr(k: Keycode; repeat: int = 48): bool		848
nim	anykeyp	nico.html#anykeyp	proc anykeyp(): bool		852
nim	axis	nico.html#axis,NicoAxis	proc axis(axis: NicoAxis): Pfloat		870
nim	axis	nico.html#axis,NicoAxis,range[]	proc axis(axis: NicoAxis; player: range[0 .. maxPlayers]): Pfloat		888
nim	cls	nico.html#cls,ColorId	proc cls(c: ColorId = 0)		946
nim	pset	nico.html#pset,Pint,Pint,ColorId	proc pset(x, y: Pint; c: ColorId)		1024
nim	ssetSafe	nico.html#ssetSafe,Pint,Pint,int	proc ssetSafe(x, y: Pint; c: int = -1)		1032
nim	pgetRaw	nico.html#pgetRaw,Pint,Pint	proc pgetRaw(x, y: Pint): ColorId		1062
nim	rbox	nico.html#rbox,Pint,Pint,Pint,Pint,Pint	proc rbox(x, y, w, h: Pint; r: Pint = 1)		1113
nim	rboxfill	nico.html#rboxfill,Pint,Pint,Pint,Pint,Pint	proc rboxfill(x, y, w, h: Pint; r: Pint = 1)		1117
nim	lineDashed	nico.html#lineDashed,Pint,Pint,Pint,Pint,uint8	proc lineDashed(x0, y0, x1, y1: Pint;\n           pattern: uint8 = 0b00000000000000000000000010101010)		1250
nim	ttrifill	nico.html#ttrifill,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat	proc ttrifill(ax, ay, au, av, bx, by, bu, bv, cx, cy, cu, cv: Pfloat)		1462
nim	tquadfill	nico.html#tquadfill,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat,Pfloat	proc tquadfill(x1, y1, u1, v1, x2, y2, u2, v2, x3, y3, u3, v3, x4, y4, u4, v4: Pfloat)		1517
nim	doWhile	nico.html#doWhile.t,untyped,untyped	template doWhile(a, b: untyped): untyped		1527
nim	blitFastRaw	nico.html#blitFastRaw,Pint,Pint,Pint,Pint,Pint,Pint	proc blitFastRaw(sx, sy, dx, dy, w, h: Pint)		1737
nim	mapAdjacent	nico.html#mapAdjacent.i,Pint,Pint	iterator mapAdjacent(tx, ty: Pint): (Pint, Pint)		2042
nim	fget	nico.html#fget,Pint	proc fget(s: Pint): uint8		2055
nim	fget	nico.html#fget,Pint,uint8	proc fget(s: Pint; f: uint8): bool		2059
nim	fset	nico.html#fset,Pint,uint8	proc fset(s: Pint; f: uint8)		2063
nim	fset	nico.html#fset,Pint,uint8,bool	proc fset(s: Pint; f: uint8; v: bool)		2067
nim	masterVol	nico.html#masterVol,range[]	proc masterVol(newVol: range[0 .. 255])		2074
nim	masterVol	nico.html#masterVol	proc masterVol(): int		2079
nim	sfxVol	nico.html#sfxVol,range[]	proc sfxVol(newVol: range[0 .. 255])		2083
nim	sfxVol	nico.html#sfxVol	proc sfxVol(): int		2087
nim	musicVol	nico.html#musicVol,range[]	proc musicVol(newVol: range[0 .. 255])		2091
nim	musicVol	nico.html#musicVol	proc musicVol(): int		2095
nim	loadDefaultFont	nico.html#loadDefaultFont,int	proc loadDefaultFont(index: int)		2187
nim	loadFont	nico.html#loadFont,int,string	proc loadFont(index: int; filename: string)		2195
nim	loadFont	nico.html#loadFont,int,string,string	proc loadFont(index: int; filename: string; chars: string)		2212
nim	fontHeight	nico.html#fontHeight	proc fontHeight(): Pint		2239
nim	copyPixelsToMem	nico.html#copyPixelsToMem,Pint,Pint,openArray[uint8],int	proc copyPixelsToMem(sx, sy: Pint; buffer: var openArray[uint8]; count = -1)		2305
nim	copyMemToScreen	nico.html#copyMemToScreen,Pint,Pint,openArray[uint8],int	proc copyMemToScreen(dx, dy: Pint; buffer: var openArray[uint8]; count = -1)		2316
nim	hasMouse	nico.html#hasMouse	proc hasMouse(): bool		2327
nim	useRelativeMouse	nico.html#useRelativeMouse,bool	proc useRelativeMouse(on: bool)		2343
nim	clearKeysForBtn	nico.html#clearKeysForBtn,NicoButton	proc clearKeysForBtn(btn: NicoButton)		2367
nim	addKeyForBtn	nico.html#addKeyForBtn,NicoButton,Scancode	proc addKeyForBtn(btn: NicoButton; scancode: Scancode)		2371
nim	addResizeFunc	nico.html#addResizeFunc,ResizeFunc	proc addResizeFunc(newResizeFunc: ResizeFunc)		2387
nim	removeResizeFunc	nico.html#removeResizeFunc,ResizeFunc	proc removeResizeFunc(resizeFunc: ResizeFunc)		2391
nim	setTargetSize	nico.html#setTargetSize,int,int	proc setTargetSize(w, h: int)		2396
nim	fixedSize	nico.html#fixedSize	proc fixedSize(): bool		2404
nim	fixedSize	nico.html#fixedSize,bool	proc fixedSize(enabled: bool)		2408
nim	getScreenScale	nico.html#getScreenScale	proc getScreenScale(): float32		2414
nim	integerScale	nico.html#integerScale	proc integerScale(): bool		2418
nim	integerScale	nico.html#integerScale,bool	proc integerScale(enabled: bool)		2422
nim	newSpritesheet	nico.html#newSpritesheet,int,int,int,int,int	proc newSpritesheet(index: int; w, h: int; tw, th = 8)		2428
nim	setSpritesheet	nico.html#setSpritesheet,int	proc setSpritesheet(index: int)		2437
nim	loadSpriteSheet	nico.html#loadSpriteSheet,int,string,Pint,Pint	proc loadSpriteSheet(index: int; filename: string; tileWidth, tileHeight: Pint = 8)		2446
nim	spriteSize	nico.html#spriteSize	proc spriteSize(): (int, int)		2464
nim	sprBlitFast	nico.html#sprBlitFast,Pint,Pint,Pint,Pint,Pint	proc sprBlitFast(spr: Pint; x, y: Pint; w, h: Pint = 1)		2508
nim	sprBlitFastRaw	nico.html#sprBlitFastRaw,Pint,Pint,Pint,Pint,Pint	proc sprBlitFastRaw(spr: Pint; x, y: Pint; w, h: Pint = 1)		2513
nim	sprBlitStretch	nico.html#sprBlitStretch,Pint,Pint,Pint,Pint,Pint	proc sprBlitStretch(spr: Pint; x, y: Pint; w, h: Pint = 1)		2518
nim	sprss	nico.html#sprss,Pint,Pint,Pint,Pint,Pint,Pint,Pint,bool,bool	proc sprss(spr: Pint; x, y: Pint; w, h: Pint = 1; dw, dh: Pint;\n      hflip, vflip: bool = false)		2598
nim	roundTo	nico.html#roundTo,T,T	proc roundTo[T](a: T; n: T): T		2618
nim	remainder	nico.html#remainder,int,int	proc remainder(a: int; n: int): int		2632
nim	mapFilter	nico.html#mapFilter,uint8	proc mapFilter(flags: uint8 = 0'u8)		2674
nim	mapFilter	nico.html#mapFilter,range[],bool	proc mapFilter(flag: range[0 .. 7]; on: bool)		2678
nim	mapWidth	nico.html#mapWidth	proc mapWidth(): Pint		2772
nim	mapHeight	nico.html#mapHeight	proc mapHeight(): Pint		2776
nim	succWrap	nico.html#succWrap.t,T	template succWrap[T](x: T): T		2890
nim	predWrap	nico.html#predWrap.t,T	template predWrap[T](x: T): T		2897
nim	incWrap	nico.html#incWrap.t,T	template incWrap[T](x: var T)		2904
nim	decWrap	nico.html#decWrap.t,T	template decWrap[T](x: var T)		2911
nim	rndbi	nico.html#rndbi,T	proc rndbi[T](x: T): T		2926
nim	rnd	nico.html#rnd,T,T	proc rnd[T](min: T; max: T): T		2930
nim	srand	nico.html#srand,int	proc srand(seed: int)		2942
nim	srand	nico.html#srand	proc srand()		2948
nim	getControllers	nico.html#getControllers	proc getControllers(): seq[NicoController]		2952
nim	createWindow	nico.html#createWindow,string,int,int,int,bool	proc createWindow(title: string; w, h: int; scale: int = 2; fullscreen: bool = false)		2967
nim	hasWindow	nico.html#hasWindow	proc hasWindow(): bool		2972
nim	readFile	nico.html#readFile,string	proc readFile(filename: string): string		2979
nim	readJsonFile	nico.html#readJsonFile,string	proc readJsonFile(filename: string): JsonNode		2983
nim	saveJsonFile	nico.html#saveJsonFile,string,JsonNode	proc saveJsonFile(filename: string; data: JsonNode)		2987
nim	flip	nico.html#flip	proc flip()		2991
nim	setFullscreen	nico.html#setFullscreen,bool	proc setFullscreen(fullscreen: bool)		2995
nim	getFullscreen	nico.html#getFullscreen	proc getFullscreen(): bool		2999
nim	setScreenSize	nico.html#setScreenSize,int,int	proc setScreenSize(w, h: int)		3003
nim	setWindowTitle	nico.html#setWindowTitle,string	proc setWindowTitle(title: string)		3006
nim	setInitFunc	nico.html#setInitFunc	proc setInitFunc(init: (proc ()))		3046
nim	setUpdateFunc	nico.html#setUpdateFunc	proc setUpdateFunc(update: (proc (dt: float32)))		3050
nim	setDrawFunc	nico.html#setDrawFunc	proc setDrawFunc(draw: (proc ()))		3053
nim	setControllerAdded	nico.html#setControllerAdded,proc(NicoController)	proc setControllerAdded(cadded: proc (controller: NicoController))		3056
nim	setControllerRemoved	nico.html#setControllerRemoved,proc(NicoController)	proc setControllerRemoved(cremoved: proc (controller: NicoController))		3059
nim	run	nico.html#run,,,	proc run(init: (proc ()); update: (proc (dt: float32)); draw: (proc ()))		3062
nim	setWritePath	nico.html#setWritePath,string	proc setWritePath(path: string)		3079
nim	setAssetPath	nico.html#setAssetPath,string	proc setAssetPath(path: string)		3086
nim	setGifScale	nico.html#setGifScale,int	proc setGifScale(gs: int = 2)		3093
nim	bpm	nico.html#bpm,Natural	proc bpm(newBpm: Natural)		3096
nim	tpb	nico.html#tpb,Natural	proc tpb(newTpb: Natural)		3100
nim	setAudioTickCallback	nico.html#setAudioTickCallback,proc)	proc setAudioTickCallback(callback: proc ())		3104
nim	addKeyListener	nico.html#addKeyListener,KeyListener	proc addKeyListener(p: KeyListener)		3107
nim	removeKeyListener	nico.html#removeKeyListener,KeyListener	proc removeKeyListener(p: KeyListener)		3111
nim	addEventListener	nico.html#addEventListener,EventListener	proc addEventListener(f: EventListener): EventListener		3117
nim	removeEventListener	nico.html#removeEventListener,EventListener	proc removeEventListener(f: EventListener)		3121
nim	removeAllEventListeners	nico.html#removeAllEventListeners	proc removeAllEventListeners()		3127
nim	sgn	nico.html#sgn,Pint	proc sgn(x: Pint): Pint		3131
nim	DEG2RAD	nico.html#DEG2RAD	const DEG2RAD		3140
nim	RAD2DEG	nico.html#RAD2DEG	const RAD2DEG		3141
nim	deg2rad	nico.html#deg2rad.t,typed	template deg2rad(x: typed): untyped		3143
nim	rad2deg	nico.html#rad2deg.t,typed	template rad2deg(x: typed): untyped		3147
nim	invLerp	nico.html#invLerp,Pfloat,Pfloat,Pfloat	proc invLerp(a, b, v: Pfloat): Pfloat		3151
nim	modSign	nico.html#modSign,T,T	proc modSign[T](a, n: T): T		3155
nim	angleDiff	nico.html#angleDiff,Pfloat,Pfloat	proc angleDiff(a, b: Pfloat): Pfloat		3159
nim	remove	nico.html#remove,seq[T],T	proc remove[T](a: var seq[T]; v: T)		3168
nim	approach	nico.html#approach,T,T,T	proc approach[T](a: var T; b: T; speed: T)		3174
nim	approach	nico.html#approach,T,T,T_2	proc approach[T](a: T; b: T; speed: T): T		3180
nim	approachAngle	nico.html#approachAngle,float32,float32,float32	proc approachAngle(a: var float32; b: float32; speed: float32)		3186
nim	timer	nico.html#timer.t,typed,untyped	template timer(a: typed; body: untyped): untyped		3190
nim	toPint	nico.html#toPint.c,uint8	converter toPint(x: uint8): Pint		3196
nim	toPfloat	nico.html#toPfloat.c,int	converter toPfloat(x: int): Pfloat		3199
nim	all	nico.html#all.i,openArray[T]	iterator all[T](a: var openArray[T]): T		3202
nimgrp	palt	nico.html#palt-procs-all	proc		177
nimgrp	btn	nico.html#btn-procs-all	proc		281
nimgrp	palcol	nico.html#palCol-procs-all	proc		180
nimgrp	mapfilter	nico.html#mapFilter-procs-all	proc		2674
nimgrp	fget	nico.html#fget-procs-all	proc		2055
nimgrp	clip	nico.html#clip-procs-all	proc		203
nimgrp	glyph	nico.html#glyph-procs-all	proc		147
nimgrp	pset	nico.html#pset-procs-all	proc		316
nimgrp	spr	nico.html#spr-procs-all	proc		349
nimgrp	fset	nico.html#fset-procs-all	proc		2063
nimgrp	pal	nico.html#pal-procs-all	proc		171
nimgrp	rnd	nico.html#rnd-procs-all	proc		421
nimgrp	fps	nico.html#fps-procs-all	proc		431
nimgrp	pald	nico.html#pald-procs-all	proc		173
nimgrp	musicvol	nico.html#musicVol-procs-all	proc		2091
nimgrp	psetraw	nico.html#psetRaw-procs-all	proc		428
nimgrp	stencilclear	nico.html#stencilClear-procs-all	proc		241
nimgrp	anybtnp	nico.html#anybtnp-procs-all	proc		828
nimgrp	srand	nico.html#srand-procs-all	proc		2942
nimgrp	approach	nico.html#approach-procs-all	proc		3174
nimgrp	fixedsize	nico.html#fixedSize-procs-all	proc		2404
nimgrp	btnp	nico.html#btnp-procs-all	proc		282
nimgrp	print	nico.html#print-procs-all	proc		151
nimgrp	btnpr	nico.html#btnpr-procs-all	proc		284
nimgrp	integerscale	nico.html#integerScale-procs-all	proc		2418
nimgrp	axis	nico.html#axis-procs-all	proc		870
nimgrp	loadfont	nico.html#loadFont-procs-all	proc		2195
nimgrp	btnup	nico.html#btnup-procs-all	proc		283
nimgrp	jaxis	nico.html#jaxis-procs-all	proc		285
nimgrp	glyphwidth	nico.html#glyphWidth-procs-all	proc		157
nimgrp	sfxvol	nico.html#sfxVol-procs-all	proc		2083
nimgrp	mastervol	nico.html#masterVol-procs-all	proc		2074
